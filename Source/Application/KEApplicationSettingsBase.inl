/*---------------------------------------------------------------------------*\
 *                             Kabala Engine                                 *
 *                                                                           *
 *                                                                           *
 *   contact: djkabala@gmail.com                                             *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU General Public License as published            *
 * by the Free Software Foundation, version 3.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU General Public                 *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class ApplicationSettings!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OpenSG/OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &ApplicationSettingsBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 ApplicationSettingsBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create a new instance of the class
inline
ApplicationSettingsPtr ApplicationSettingsBase::create(void) 
{
    ApplicationSettingsPtr fc; 

    if(getClassType().getPrototype() != OSG::NullFC) 
    {
        fc = ApplicationSettingsPtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline
ApplicationSettingsPtr ApplicationSettingsBase::createEmpty(void) 
{ 
    ApplicationSettingsPtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

//! Get the ApplicationSettings::_sfDataDirectory field.
inline
const SFPath *ApplicationSettingsBase::getSFDataDirectory(void) const
{
    return &_sfDataDirectory;
}

//! Get the ApplicationSettings::_sfDataDirectory field.
inline
SFPath *ApplicationSettingsBase::editSFDataDirectory(void)
{
    return &_sfDataDirectory;
}

#ifndef OSG_2_PREP
//! Get the ApplicationSettings::_sfDataDirectory field.
inline
SFPath *ApplicationSettingsBase::getSFDataDirectory(void)
{
    return &_sfDataDirectory;
}
#endif

//! Get the ApplicationSettings::_sfLastOpenedProjectFile field.
inline
const SFPath *ApplicationSettingsBase::getSFLastOpenedProjectFile(void) const
{
    return &_sfLastOpenedProjectFile;
}

//! Get the ApplicationSettings::_sfLastOpenedProjectFile field.
inline
SFPath *ApplicationSettingsBase::editSFLastOpenedProjectFile(void)
{
    return &_sfLastOpenedProjectFile;
}

#ifndef OSG_2_PREP
//! Get the ApplicationSettings::_sfLastOpenedProjectFile field.
inline
SFPath *ApplicationSettingsBase::getSFLastOpenedProjectFile(void)
{
    return &_sfLastOpenedProjectFile;
}
#endif

//! Get the ApplicationSettings::_mfRecentProjectFiles field.
inline
const MFPath *ApplicationSettingsBase::getMFRecentProjectFiles(void) const
{
    return &_mfRecentProjectFiles;
}

//! Get the ApplicationSettings::_mfRecentProjectFiles field.
inline
MFPath *ApplicationSettingsBase::editMFRecentProjectFiles(void)
{
    return &_mfRecentProjectFiles;
}

#ifndef OSG_2_PREP
//! Get the ApplicationSettings::_mfRecentProjectFiles field.
inline
MFPath *ApplicationSettingsBase::getMFRecentProjectFiles(void)
{
    return &_mfRecentProjectFiles;
}
#endif

//! Get the ApplicationSettings::_sfDefaultWindowPosition field.
inline
const SFPnt2f *ApplicationSettingsBase::getSFDefaultWindowPosition(void) const
{
    return &_sfDefaultWindowPosition;
}

//! Get the ApplicationSettings::_sfDefaultWindowPosition field.
inline
SFPnt2f *ApplicationSettingsBase::editSFDefaultWindowPosition(void)
{
    return &_sfDefaultWindowPosition;
}

#ifndef OSG_2_PREP
//! Get the ApplicationSettings::_sfDefaultWindowPosition field.
inline
SFPnt2f *ApplicationSettingsBase::getSFDefaultWindowPosition(void)
{
    return &_sfDefaultWindowPosition;
}
#endif

//! Get the ApplicationSettings::_sfDefaultWindowSize field.
inline
const SFVec2f *ApplicationSettingsBase::getSFDefaultWindowSize(void) const
{
    return &_sfDefaultWindowSize;
}

//! Get the ApplicationSettings::_sfDefaultWindowSize field.
inline
SFVec2f *ApplicationSettingsBase::editSFDefaultWindowSize(void)
{
    return &_sfDefaultWindowSize;
}

#ifndef OSG_2_PREP
//! Get the ApplicationSettings::_sfDefaultWindowSize field.
inline
SFVec2f *ApplicationSettingsBase::getSFDefaultWindowSize(void)
{
    return &_sfDefaultWindowSize;
}
#endif

//! Get the ApplicationSettings::_sfFullscreen field.
inline
const SFBool *ApplicationSettingsBase::getSFFullscreen(void) const
{
    return &_sfFullscreen;
}

//! Get the ApplicationSettings::_sfFullscreen field.
inline
SFBool *ApplicationSettingsBase::editSFFullscreen(void)
{
    return &_sfFullscreen;
}

#ifndef OSG_2_PREP
//! Get the ApplicationSettings::_sfFullscreen field.
inline
SFBool *ApplicationSettingsBase::getSFFullscreen(void)
{
    return &_sfFullscreen;
}
#endif

//! Get the ApplicationSettings::_sfHideAdvancedFields field.
inline
const SFBool *ApplicationSettingsBase::getSFHideAdvancedFields(void) const
{
    return &_sfHideAdvancedFields;
}

//! Get the ApplicationSettings::_sfHideAdvancedFields field.
inline
SFBool *ApplicationSettingsBase::editSFHideAdvancedFields(void)
{
    return &_sfHideAdvancedFields;
}

#ifndef OSG_2_PREP
//! Get the ApplicationSettings::_sfHideAdvancedFields field.
inline
SFBool *ApplicationSettingsBase::getSFHideAdvancedFields(void)
{
    return &_sfHideAdvancedFields;
}
#endif


//! Get the value of the ApplicationSettings::_sfDataDirectory field.
inline
Path &ApplicationSettingsBase::editDataDirectory(void)
{
    return _sfDataDirectory.getValue();
}

//! Get the value of the ApplicationSettings::_sfDataDirectory field.
inline
const Path &ApplicationSettingsBase::getDataDirectory(void) const
{
    return _sfDataDirectory.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the ApplicationSettings::_sfDataDirectory field.
inline
Path &ApplicationSettingsBase::getDataDirectory(void)
{
    return _sfDataDirectory.getValue();
}
#endif

//! Set the value of the ApplicationSettings::_sfDataDirectory field.
inline
void ApplicationSettingsBase::setDataDirectory(const Path &value)
{
    _sfDataDirectory.setValue(value);
}

//! Get the value of the ApplicationSettings::_sfLastOpenedProjectFile field.
inline
Path &ApplicationSettingsBase::editLastOpenedProjectFile(void)
{
    return _sfLastOpenedProjectFile.getValue();
}

//! Get the value of the ApplicationSettings::_sfLastOpenedProjectFile field.
inline
const Path &ApplicationSettingsBase::getLastOpenedProjectFile(void) const
{
    return _sfLastOpenedProjectFile.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the ApplicationSettings::_sfLastOpenedProjectFile field.
inline
Path &ApplicationSettingsBase::getLastOpenedProjectFile(void)
{
    return _sfLastOpenedProjectFile.getValue();
}
#endif

//! Set the value of the ApplicationSettings::_sfLastOpenedProjectFile field.
inline
void ApplicationSettingsBase::setLastOpenedProjectFile(const Path &value)
{
    _sfLastOpenedProjectFile.setValue(value);
}

//! Get the value of the ApplicationSettings::_sfDefaultWindowPosition field.
inline
Pnt2f &ApplicationSettingsBase::editDefaultWindowPosition(void)
{
    return _sfDefaultWindowPosition.getValue();
}

//! Get the value of the ApplicationSettings::_sfDefaultWindowPosition field.
inline
const Pnt2f &ApplicationSettingsBase::getDefaultWindowPosition(void) const
{
    return _sfDefaultWindowPosition.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the ApplicationSettings::_sfDefaultWindowPosition field.
inline
Pnt2f &ApplicationSettingsBase::getDefaultWindowPosition(void)
{
    return _sfDefaultWindowPosition.getValue();
}
#endif

//! Set the value of the ApplicationSettings::_sfDefaultWindowPosition field.
inline
void ApplicationSettingsBase::setDefaultWindowPosition(const Pnt2f &value)
{
    _sfDefaultWindowPosition.setValue(value);
}

//! Get the value of the ApplicationSettings::_sfDefaultWindowSize field.
inline
Vec2f &ApplicationSettingsBase::editDefaultWindowSize(void)
{
    return _sfDefaultWindowSize.getValue();
}

//! Get the value of the ApplicationSettings::_sfDefaultWindowSize field.
inline
const Vec2f &ApplicationSettingsBase::getDefaultWindowSize(void) const
{
    return _sfDefaultWindowSize.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the ApplicationSettings::_sfDefaultWindowSize field.
inline
Vec2f &ApplicationSettingsBase::getDefaultWindowSize(void)
{
    return _sfDefaultWindowSize.getValue();
}
#endif

//! Set the value of the ApplicationSettings::_sfDefaultWindowSize field.
inline
void ApplicationSettingsBase::setDefaultWindowSize(const Vec2f &value)
{
    _sfDefaultWindowSize.setValue(value);
}

//! Get the value of the ApplicationSettings::_sfFullscreen field.
inline
bool &ApplicationSettingsBase::editFullscreen(void)
{
    return _sfFullscreen.getValue();
}

//! Get the value of the ApplicationSettings::_sfFullscreen field.
inline
const bool &ApplicationSettingsBase::getFullscreen(void) const
{
    return _sfFullscreen.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the ApplicationSettings::_sfFullscreen field.
inline
bool &ApplicationSettingsBase::getFullscreen(void)
{
    return _sfFullscreen.getValue();
}
#endif

//! Set the value of the ApplicationSettings::_sfFullscreen field.
inline
void ApplicationSettingsBase::setFullscreen(const bool &value)
{
    _sfFullscreen.setValue(value);
}

//! Get the value of the ApplicationSettings::_sfHideAdvancedFields field.
inline
bool &ApplicationSettingsBase::editHideAdvancedFields(void)
{
    return _sfHideAdvancedFields.getValue();
}

//! Get the value of the ApplicationSettings::_sfHideAdvancedFields field.
inline
const bool &ApplicationSettingsBase::getHideAdvancedFields(void) const
{
    return _sfHideAdvancedFields.getValue();
}

#ifndef OSG_2_PREP
//! Get the value of the ApplicationSettings::_sfHideAdvancedFields field.
inline
bool &ApplicationSettingsBase::getHideAdvancedFields(void)
{
    return _sfHideAdvancedFields.getValue();
}
#endif

//! Set the value of the ApplicationSettings::_sfHideAdvancedFields field.
inline
void ApplicationSettingsBase::setHideAdvancedFields(const bool &value)
{
    _sfHideAdvancedFields.setValue(value);
}


//! Get the value of the \a index element the ApplicationSettings::_mfRecentProjectFiles field.
inline
Path &ApplicationSettingsBase::editRecentProjectFiles(const UInt32 index)
{
    return _mfRecentProjectFiles[index];
}

//! Get the value of the \a index element the ApplicationSettings::_mfRecentProjectFiles field.
inline
const Path &ApplicationSettingsBase::getRecentProjectFiles(const UInt32 index) const
{
    return _mfRecentProjectFiles[index];
}

#ifndef OSG_2_PREP
//! Get the value of the \a index element the ApplicationSettings::_mfRecentProjectFiles field.
inline
Path &ApplicationSettingsBase::getRecentProjectFiles(const UInt32 index)
{
    return _mfRecentProjectFiles[index];
}

//! Get the ApplicationSettings::_mfRecentProjectFiles field.
inline
MFPath &ApplicationSettingsBase::getRecentProjectFiles(void)
{
    return _mfRecentProjectFiles;
}

//! Get the ApplicationSettings::_mfRecentProjectFiles field.
inline
const MFPath &ApplicationSettingsBase::getRecentProjectFiles(void) const
{
    return _mfRecentProjectFiles;
}

#endif

OSG_END_NAMESPACE

