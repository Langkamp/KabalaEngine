/*---------------------------------------------------------------------------*\
 *                             Kabala Engine                                 *
 *                                                                           *
 *               Copyright (C) 2009-2010 by David Kabala                     *
 *                                                                           *
 *   authors:  David Kabala (djkabala@gmail.com)                             *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU General Public License as published            *
 * by the Free Software Foundation, version 3.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU General Public                 *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class ApplicationSettings!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &ApplicationSettingsBase::getClassType(void)
{
    return _type;
}

//! access the numerical type of the class
inline
OSG::UInt32 ApplicationSettingsBase::getClassTypeId(void)
{
    return _type.getId();
}

inline
OSG::UInt16 ApplicationSettingsBase::getClassGroupId(void)
{
    return _type.getGroupId();
}

/*------------------------------ get -----------------------------------*/

//! Get the value of the ApplicationSettings::_sfDataDirectory field.

inline
BoostPath &ApplicationSettingsBase::editDataDirectory(void)
{
    editSField(DataDirectoryFieldMask);

    return _sfDataDirectory.getValue();
}

//! Get the value of the ApplicationSettings::_sfDataDirectory field.
inline
const BoostPath &ApplicationSettingsBase::getDataDirectory(void) const
{
    return _sfDataDirectory.getValue();
}

//! Set the value of the ApplicationSettings::_sfDataDirectory field.
inline
void ApplicationSettingsBase::setDataDirectory(const BoostPath &value)
{
    editSField(DataDirectoryFieldMask);

    _sfDataDirectory.setValue(value);
}
//! Get the value of the ApplicationSettings::_sfLastOpenedProjectFile field.

inline
BoostPath &ApplicationSettingsBase::editLastOpenedProjectFile(void)
{
    editSField(LastOpenedProjectFileFieldMask);

    return _sfLastOpenedProjectFile.getValue();
}

//! Get the value of the ApplicationSettings::_sfLastOpenedProjectFile field.
inline
const BoostPath &ApplicationSettingsBase::getLastOpenedProjectFile(void) const
{
    return _sfLastOpenedProjectFile.getValue();
}

//! Set the value of the ApplicationSettings::_sfLastOpenedProjectFile field.
inline
void ApplicationSettingsBase::setLastOpenedProjectFile(const BoostPath &value)
{
    editSField(LastOpenedProjectFileFieldMask);

    _sfLastOpenedProjectFile.setValue(value);
}
//! Get the value of the ApplicationSettings::_sfDefaultWindowPosition field.

inline
Pnt2f &ApplicationSettingsBase::editDefaultWindowPosition(void)
{
    editSField(DefaultWindowPositionFieldMask);

    return _sfDefaultWindowPosition.getValue();
}

//! Get the value of the ApplicationSettings::_sfDefaultWindowPosition field.
inline
const Pnt2f &ApplicationSettingsBase::getDefaultWindowPosition(void) const
{
    return _sfDefaultWindowPosition.getValue();
}

//! Set the value of the ApplicationSettings::_sfDefaultWindowPosition field.
inline
void ApplicationSettingsBase::setDefaultWindowPosition(const Pnt2f &value)
{
    editSField(DefaultWindowPositionFieldMask);

    _sfDefaultWindowPosition.setValue(value);
}
//! Get the value of the ApplicationSettings::_sfDefaultWindowSize field.

inline
Vec2f &ApplicationSettingsBase::editDefaultWindowSize(void)
{
    editSField(DefaultWindowSizeFieldMask);

    return _sfDefaultWindowSize.getValue();
}

//! Get the value of the ApplicationSettings::_sfDefaultWindowSize field.
inline
const Vec2f &ApplicationSettingsBase::getDefaultWindowSize(void) const
{
    return _sfDefaultWindowSize.getValue();
}

//! Set the value of the ApplicationSettings::_sfDefaultWindowSize field.
inline
void ApplicationSettingsBase::setDefaultWindowSize(const Vec2f &value)
{
    editSField(DefaultWindowSizeFieldMask);

    _sfDefaultWindowSize.setValue(value);
}
//! Get the value of the ApplicationSettings::_sfFullscreen field.

inline
bool &ApplicationSettingsBase::editFullscreen(void)
{
    editSField(FullscreenFieldMask);

    return _sfFullscreen.getValue();
}

//! Get the value of the ApplicationSettings::_sfFullscreen field.
inline
      bool  ApplicationSettingsBase::getFullscreen(void) const
{
    return _sfFullscreen.getValue();
}

//! Set the value of the ApplicationSettings::_sfFullscreen field.
inline
void ApplicationSettingsBase::setFullscreen(const bool value)
{
    editSField(FullscreenFieldMask);

    _sfFullscreen.setValue(value);
}
//! Get the value of the ApplicationSettings::_sfHideAdvancedFields field.

inline
bool &ApplicationSettingsBase::editHideAdvancedFields(void)
{
    editSField(HideAdvancedFieldsFieldMask);

    return _sfHideAdvancedFields.getValue();
}

//! Get the value of the ApplicationSettings::_sfHideAdvancedFields field.
inline
      bool  ApplicationSettingsBase::getHideAdvancedFields(void) const
{
    return _sfHideAdvancedFields.getValue();
}

//! Set the value of the ApplicationSettings::_sfHideAdvancedFields field.
inline
void ApplicationSettingsBase::setHideAdvancedFields(const bool value)
{
    editSField(HideAdvancedFieldsFieldMask);

    _sfHideAdvancedFields.setValue(value);
}

//! Get the value of the \a index element the ApplicationSettings::_mfRecentProjectFiles field.
inline
const BoostPath &ApplicationSettingsBase::getRecentProjectFiles(const UInt32 index) const
{
    return _mfRecentProjectFiles[index];
}

inline
BoostPath &ApplicationSettingsBase::editRecentProjectFiles(const UInt32 index)
{
    editMField(RecentProjectFilesFieldMask, _mfRecentProjectFiles);

    return _mfRecentProjectFiles[index];
}



#ifdef OSG_MT_CPTR_ASPECT
inline
void ApplicationSettingsBase::execSync (      ApplicationSettingsBase *pFrom,
                                        ConstFieldMaskArg  whichField,
                                        AspectOffsetStore &oOffsets,
                                        ConstFieldMaskArg  syncMode,
                                  const UInt32             uiSyncInfo)
{
    Inherited::execSync(pFrom, whichField, oOffsets, syncMode, uiSyncInfo);

    if(FieldBits::NoField != (DataDirectoryFieldMask & whichField))
        _sfDataDirectory.syncWith(pFrom->_sfDataDirectory);

    if(FieldBits::NoField != (LastOpenedProjectFileFieldMask & whichField))
        _sfLastOpenedProjectFile.syncWith(pFrom->_sfLastOpenedProjectFile);

    if(FieldBits::NoField != (RecentProjectFilesFieldMask & whichField))
        _mfRecentProjectFiles.syncWith(pFrom->_mfRecentProjectFiles,
                                syncMode,
                                uiSyncInfo,
                                oOffsets);

    if(FieldBits::NoField != (DefaultWindowPositionFieldMask & whichField))
        _sfDefaultWindowPosition.syncWith(pFrom->_sfDefaultWindowPosition);

    if(FieldBits::NoField != (DefaultWindowSizeFieldMask & whichField))
        _sfDefaultWindowSize.syncWith(pFrom->_sfDefaultWindowSize);

    if(FieldBits::NoField != (FullscreenFieldMask & whichField))
        _sfFullscreen.syncWith(pFrom->_sfFullscreen);

    if(FieldBits::NoField != (HideAdvancedFieldsFieldMask & whichField))
        _sfHideAdvancedFields.syncWith(pFrom->_sfHideAdvancedFields);
}
#endif


inline
const Char8 *ApplicationSettingsBase::getClassname(void)
{
    return "ApplicationSettings";
}
OSG_GEN_CONTAINERPTR(ApplicationSettings);

OSG_END_NAMESPACE

