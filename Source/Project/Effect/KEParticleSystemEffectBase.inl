/*---------------------------------------------------------------------------*\
 *                             Kabala Engine                                 *
 *                                                                           *
 *               Copyright (C) 2009-2010 by David Kabala                     *
 *                                                                           *
 *   authors:  Robert Goetz (rdgoetz@iastate.edu)                            *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU General Public License as published            *
 * by the Free Software Foundation, version 3.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU General Public                 *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class ParticleSystemEffect!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &ParticleSystemEffectBase::getClassType(void)
{
    return _type;
}

//! access the numerical type of the class
inline
OSG::UInt32 ParticleSystemEffectBase::getClassTypeId(void)
{
    return _type.getId();
}

inline
OSG::UInt16 ParticleSystemEffectBase::getClassGroupId(void)
{
    return _type.getGroupId();
}

/*------------------------------ get -----------------------------------*/


//! Get the value of the ParticleSystemEffect::_sfTheSystem field.
inline
ParticleSystem * ParticleSystemEffectBase::getTheSystem(void) const
{
    return _sfTheSystem.getValue();
}

//! Set the value of the ParticleSystemEffect::_sfTheSystem field.
inline
void ParticleSystemEffectBase::setTheSystem(ParticleSystem * const value)
{
    editSField(TheSystemFieldMask);

    _sfTheSystem.setValue(value);
}
//! Get the value of the ParticleSystemEffect::_sfMaxVolume field.

inline
Real32 &ParticleSystemEffectBase::editMaxVolume(void)
{
    editSField(MaxVolumeFieldMask);

    return _sfMaxVolume.getValue();
}

//! Get the value of the ParticleSystemEffect::_sfMaxVolume field.
inline
      Real32  ParticleSystemEffectBase::getMaxVolume(void) const
{
    return _sfMaxVolume.getValue();
}

//! Set the value of the ParticleSystemEffect::_sfMaxVolume field.
inline
void ParticleSystemEffectBase::setMaxVolume(const Real32 value)
{
    editSField(MaxVolumeFieldMask);

    _sfMaxVolume.setValue(value);
}
//! Get the value of the ParticleSystemEffect::_sfMinVolume field.

inline
Real32 &ParticleSystemEffectBase::editMinVolume(void)
{
    editSField(MinVolumeFieldMask);

    return _sfMinVolume.getValue();
}

//! Get the value of the ParticleSystemEffect::_sfMinVolume field.
inline
      Real32  ParticleSystemEffectBase::getMinVolume(void) const
{
    return _sfMinVolume.getValue();
}

//! Set the value of the ParticleSystemEffect::_sfMinVolume field.
inline
void ParticleSystemEffectBase::setMinVolume(const Real32 value)
{
    editSField(MinVolumeFieldMask);

    _sfMinVolume.setValue(value);
}
//! Get the value of the ParticleSystemEffect::_sfLifespan field.

inline
Real32 &ParticleSystemEffectBase::editLifespan(void)
{
    editSField(LifespanFieldMask);

    return _sfLifespan.getValue();
}

//! Get the value of the ParticleSystemEffect::_sfLifespan field.
inline
      Real32  ParticleSystemEffectBase::getLifespan(void) const
{
    return _sfLifespan.getValue();
}

//! Set the value of the ParticleSystemEffect::_sfLifespan field.
inline
void ParticleSystemEffectBase::setLifespan(const Real32 value)
{
    editSField(LifespanFieldMask);

    _sfLifespan.setValue(value);
}
//! Get the value of the ParticleSystemEffect::_sfMaxParticles field.

inline
UInt32 &ParticleSystemEffectBase::editMaxParticles(void)
{
    editSField(MaxParticlesFieldMask);

    return _sfMaxParticles.getValue();
}

//! Get the value of the ParticleSystemEffect::_sfMaxParticles field.
inline
      UInt32  ParticleSystemEffectBase::getMaxParticles(void) const
{
    return _sfMaxParticles.getValue();
}

//! Set the value of the ParticleSystemEffect::_sfMaxParticles field.
inline
void ParticleSystemEffectBase::setMaxParticles(const UInt32 value)
{
    editSField(MaxParticlesFieldMask);

    _sfMaxParticles.setValue(value);
}
//! Get the value of the ParticleSystemEffect::_sfMinParticles field.

inline
UInt32 &ParticleSystemEffectBase::editMinParticles(void)
{
    editSField(MinParticlesFieldMask);

    return _sfMinParticles.getValue();
}

//! Get the value of the ParticleSystemEffect::_sfMinParticles field.
inline
      UInt32  ParticleSystemEffectBase::getMinParticles(void) const
{
    return _sfMinParticles.getValue();
}

//! Set the value of the ParticleSystemEffect::_sfMinParticles field.
inline
void ParticleSystemEffectBase::setMinParticles(const UInt32 value)
{
    editSField(MinParticlesFieldMask);

    _sfMinParticles.setValue(value);
}

//! Get the value of the \a index element the ParticleSystemEffect::_mfGenerators field.
inline
ParticleGenerator * ParticleSystemEffectBase::getGenerators(const UInt32 index) const
{
    return _mfGenerators[index];
}


#ifdef OSG_MT_CPTR_ASPECT
inline
void ParticleSystemEffectBase::execSync (      ParticleSystemEffectBase *pFrom,
                                        ConstFieldMaskArg  whichField,
                                        AspectOffsetStore &oOffsets,
                                        ConstFieldMaskArg  syncMode,
                                  const UInt32             uiSyncInfo)
{
    Inherited::execSync(pFrom, whichField, oOffsets, syncMode, uiSyncInfo);

    if(FieldBits::NoField != (TheSystemFieldMask & whichField))
        _sfTheSystem.syncWith(pFrom->_sfTheSystem);

    if(FieldBits::NoField != (GeneratorsFieldMask & whichField))
        _mfGenerators.syncWith(pFrom->_mfGenerators,
                                syncMode,
                                uiSyncInfo,
                                oOffsets);

    if(FieldBits::NoField != (MaxVolumeFieldMask & whichField))
        _sfMaxVolume.syncWith(pFrom->_sfMaxVolume);

    if(FieldBits::NoField != (MinVolumeFieldMask & whichField))
        _sfMinVolume.syncWith(pFrom->_sfMinVolume);

    if(FieldBits::NoField != (LifespanFieldMask & whichField))
        _sfLifespan.syncWith(pFrom->_sfLifespan);

    if(FieldBits::NoField != (MaxParticlesFieldMask & whichField))
        _sfMaxParticles.syncWith(pFrom->_sfMaxParticles);

    if(FieldBits::NoField != (MinParticlesFieldMask & whichField))
        _sfMinParticles.syncWith(pFrom->_sfMinParticles);
}
#endif


inline
const Char8 *ParticleSystemEffectBase::getClassname(void)
{
    return "ParticleSystemEffect";
}
OSG_GEN_CONTAINERPTR(ParticleSystemEffect);

OSG_END_NAMESPACE

